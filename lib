-- Custom UI Library with full features

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local Library = {}
Library.Themes = { Midnight = {Background = Color3.fromRGB(15,15,25), Accent = Color3.fromRGB(0, 120, 255), Text = Color3.fromRGB(255,255,255)}, Synapse = {Background = Color3.fromRGB(30,30,30), Accent = Color3.fromRGB(46, 46, 46), Text = Color3.fromRGB(255,255,255)}, Light = {Background = Color3.fromRGB(240,240,240), Accent = Color3.fromRGB(200, 200, 200), Text = Color3.fromRGB(0,0,0)}, Dark = {Background = Color3.fromRGB(20,20,20), Accent = Color3.fromRGB(60, 60, 60), Text = Color3.fromRGB(255,255,255)}, Ocean = {Background = Color3.fromRGB(10, 25, 45), Accent = Color3.fromRGB(0, 153, 204), Text = Color3.fromRGB(255,255,255)} }

function createDraggable(frame) local dragging, dragInput, dragStart, startPos frame.InputBegan:Connect(function(input) if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then dragging = true dragStart = input.Position startPos = frame.Position input.Changed:Connect(function() if input.UserInputState == Enum.UserInputState.End then dragging = false end end) end end) frame.InputChanged:Connect(function(input) if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then local delta = input.Position - dragStart frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y) end end) end

function Library:CreateWindow(title, theme) local Theme = self.Themes[theme] or self.Themes.Dark

local ScreenGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
ScreenGui.Name = "CustomUILib"
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 500, 0, 300)
MainFrame.Position = UDim2.new(0.5, -250, 0.5, -150)
MainFrame.BackgroundColor3 = Theme.Background
MainFrame.BorderSizePixel = 0
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.Active = true
MainFrame.Draggable = true
createDraggable(MainFrame)

local TabList = Instance.new("ScrollingFrame", MainFrame)
TabList.Name = "TabList"
TabList.Size = UDim2.new(0, 120, 1, -40)
TabList.Position = UDim2.new(0, 0, 0, 0)
TabList.BackgroundColor3 = Theme.Accent
TabList.ScrollBarThickness = 4
TabList.CanvasSize = UDim2.new(0, 0, 0, 0)

local TabListLayout = Instance.new("UIListLayout", TabList)
TabListLayout.SortOrder = Enum.SortOrder.LayoutOrder

local ContentFrame = Instance.new("Frame", MainFrame)
ContentFrame.Name = "Content"
ContentFrame.Size = UDim2.new(1, -120, 1, -40)
ContentFrame.Position = UDim2.new(0, 120, 0, 0)
ContentFrame.BackgroundTransparency = 1

local PlayerInfo = Instance.new("Frame", MainFrame)
PlayerInfo.Name = "PlayerInfo"
PlayerInfo.Size = UDim2.new(0, 180, 0, 40)
PlayerInfo.Position = UDim2.new(0, 10, 1, -40)
PlayerInfo.BackgroundTransparency = 1

local Thumb = Instance.new("ImageLabel", PlayerInfo)
Thumb.Size = UDim2.new(0, 36, 0, 36)
Thumb.Position = UDim2.new(0, 0, 0, 2)
Thumb.BackgroundTransparency = 1

local Text = Instance.new("TextLabel", PlayerInfo)
Text.Position = UDim2.new(0, 40, 0, 10)
Text.Size = UDim2.new(1, -40, 0, 20)
Text.BackgroundTransparency = 1
Text.TextColor3 = Theme.Text
Text.TextScaled = true
Text.TextXAlignment = Enum.TextXAlignment.Left

local player = Players.LocalPlayer
Text.Text = player.DisplayName or player.Name
Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size48x48)
Thumb.Image = Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size48x48)

local Window = {}

function Window:CreateTab(tabName)
    local TabButton = Instance.new("TextButton", TabList)
    TabButton.Text = tabName
    TabButton.Size = UDim2.new(1, 0, 0, 30)
    TabButton.BackgroundColor3 = Theme.Background
    TabButton.TextColor3 = Theme.Text

    local TabFrame = Instance.new("ScrollingFrame", ContentFrame)
    TabFrame.Visible = false
    TabFrame.Size = UDim2.new(1, 0, 1, 0)
    TabFrame.BackgroundTransparency = 1
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, 0)

    local Layout = Instance.new("UIListLayout", TabFrame)
    Layout.SortOrder = Enum.SortOrder.LayoutOrder
    Layout.Padding = UDim.new(0, 8)

    TabButton.MouseButton1Click:Connect(function()
        for _, frame in pairs(ContentFrame:GetChildren()) do
            if frame:IsA("ScrollingFrame") then frame.Visible = false end
        end
        TabFrame.Visible = true
    end)

    local Tab = {}

    function Tab:CreateSection(sectionName)
        local SectionLabel = Instance.new("TextLabel", TabFrame)
        SectionLabel.Text = sectionName
        SectionLabel.Size = UDim2.new(1, -10, 0, 30)
        SectionLabel.BackgroundTransparency = 1
        SectionLabel.TextColor3 = Theme.Accent
        SectionLabel.TextXAlignment = Enum.TextXAlignment.Left

        local Section = {}

        function Section:CreateButton(text, callback)
            local Button = Instance.new("TextButton", TabFrame)
            Button.Size = UDim2.new(1, -10, 0, 30)
            Button.Text = text
            Button.BackgroundColor3 = Theme.Accent
            Button.TextColor3 = Theme.Text
            Button.MouseButton1Click:Connect(callback)
        end

        function Section:CreateToggle(text, default, callback)
            local Toggle = Instance.new("TextButton", TabFrame)
            Toggle.Size = UDim2.new(1, -10, 0, 30)
            Toggle.Text = text .. ": " .. tostring(default)
            Toggle.BackgroundColor3 = Theme.Accent
            Toggle.TextColor3 = Theme.Text

            local state = default
            Toggle.MouseButton1Click:Connect(function()
                state = not state
                Toggle.Text = text .. ": " .. tostring(state)
                callback(state)
            end)
        end

        function Section:CreateDropdown(text, options, callback)
            local Dropdown = Instance.new("TextButton", TabFrame)
            Dropdown.Size = UDim2.new(1, -10, 0, 30)
            Dropdown.Text = text .. ": " .. options[1]
            Dropdown.BackgroundColor3 = Theme.Accent
            Dropdown.TextColor3 = Theme.Text
            local index = 1
            Dropdown.MouseButton1Click:Connect(function()
                index = (index % #options) + 1
                Dropdown.Text = text .. ": " .. options[index]
                callback(options[index])
            end)
        end

        function Section:CreateTextBox(text, callback)
            local TextBox = Instance.new("TextBox", TabFrame)
            TextBox.Size = UDim2.new(1, -10, 0, 30)
            TextBox.PlaceholderText = text
            TextBox.BackgroundColor3 = Theme.Accent
            TextBox.TextColor3 = Theme.Text
            TextBox.FocusLost:Connect(function()
                callback(TextBox.Text)
            end)
        end

        function Section:CreateSlider(name, min, max, default, callback)
            local Slider = Instance.new("TextButton", TabFrame)
            Slider.Size = UDim2.new(1, -10, 0, 30)
            Slider.Text = name .. ": " .. tostring(default)
            Slider.BackgroundColor3 = Theme.Accent
            Slider.TextColor3 = Theme.Text
            local value = default
            Slider.MouseButton1Click:Connect(function()
                value = value + 1
                if value > max then value = min end
                Slider.Text = name .. ": " .. tostring(value)
                callback(value)
            end)
        end

        return Section
    end

    return Tab
end

return Window

end

return Library
