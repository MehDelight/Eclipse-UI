-- Required services
local TweenService = game:GetService("TweenService")
local Player = game.Players.LocalPlayer
local PlayerGui = Player:WaitForChild("PlayerGui")
local UIS = game:GetService("UserInputService")

-- UI Library
local UI_Library = {}

-- CreateWindow method (to create windows)
function UI_Library:CreateWindow(windowTitle)
    -- Create UI container
    local Window = Instance.new("Frame")
    Window.Size = UDim2.new(0, 450, 0, 250)
    Window.Position = UDim2.new(0, 180, 0, 1000)  -- Start at the bottom of the screen
    Window.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    Window.Active = true
    Window.Visible = false  -- Initially hidden
    Window.Parent = PlayerGui:FindFirstChild("MatexUI") or PlayerGui -- Parent it to PlayerGui

    -- Tween setup for showing the window
    local goalVisible = UDim2.new(0, 180, 0, 180)  -- Position to center
    local goalInvisible = UDim2.new(0, 180, 0, 1000)  -- Position to bottom (invisible)

    -- Set the target position to be at the top center (0, 180, 0, 0)
    local goalCenter = UDim2.new(0, 180, 0, 0)  -- Position to top-center
    local tweenInfo = TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)  -- 1 second smooth animation

    -- Tween for showing the window
    local tweenShow = TweenService:Create(Window, tweenInfo, {Position = goalCenter})

    -- Tween for hiding the window
    local tweenHide = TweenService:Create(Window, tweenInfo, {Position = goalInvisible})

    -- Add a title to the window
    local TitleBar = Instance.new("TextLabel")
    TitleBar.Size = UDim2.new(1, 0, 0, 30)
    TitleBar.Text = windowTitle or "Untitled Window"
    TitleBar.TextColor3 = Color3.new(1, 1, 1)
    TitleBar.Font = Enum.Font.GothamBold
    TitleBar.TextSize = 16
    TitleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    TitleBar.Parent = Window

    -- Add a simple button inside the window
    local TestButton = Instance.new("TextButton")
    TestButton.Size = UDim2.new(1, -20, 0, 30)
    TestButton.Position = UDim2.new(0, 10, 0, 40)
    TestButton.Text = "Test Button"
    TestButton.TextColor3 = Color3.new(1, 1, 1)
    TestButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    TestButton.Font = Enum.Font.Gotham
    TestButton.TextSize = 14
    TestButton.Parent = Window

    TestButton.MouseButton1Click:Connect(function()
        print("Test Button clicked")
    end)

    -- Button to toggle visibility
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Size = UDim2.new(0, 100, 0, 40)
    ToggleButton.Position = UDim2.new(0, 20, 0, 20)  -- Positioning outside of the frame
    ToggleButton.Text = "Toggle Window"
    ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Font = Enum.Font.Gotham
    ToggleButton.TextSize = 14
    ToggleButton.Parent = PlayerGui:FindFirstChild("MatexUI") or PlayerGui -- Parent to PlayerGui

    -- Toggle window visibility when button is clicked
    ToggleButton.MouseButton1Click:Connect(function()
        if Window.Visible then
            tweenHide:Play()  -- Play the animation to hide
            Window.Visible = false  -- Set window to invisible after animation
        else
            Window.Visible = true  -- Set window to visible before starting animation
            tweenShow:Play()  -- Play the animation to show
        end
    end)

    -- Make sure the UI is mobile-friendly
    -- Adapt window size based on screen size
    local function updateWindowSize()
        if UIS.TouchEnabled then
            -- Mobile devices: Adjust for small screens
            Window.Size = UDim2.new(0, 300, 0, 200)
            TitleBar.Size = UDim2.new(1, 0, 0, 30)
        else
            -- Desktop: Full-size window
            Window.Size = UDim2.new(0, 450, 0, 250)
            TitleBar.Size = UDim2.new(1, 0, 0, 30)
        end
    end

    -- Call updateWindowSize whenever the screen size changes
    UIS.Changed:Connect(function()
        updateWindowSize()
    end)
    
    -- Call once on initialization
    updateWindowSize()

    -- Handle window dragging for mobile and PC
    local dragging, dragInput, mousePos, offsetPos

    TitleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            offsetPos = Window.Position - UDim2.new(0, input.Position.X, 0, input.Position.Y)
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    TitleBar.InputChanged:Connect(function(input)
        if dragging then
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                mousePos = input.Position
                Window.Position = UDim2.new(0, mousePos.X - offsetPos.X.Offset, 0, mousePos.Y - offsetPos.Y.Offset)
            end
        end
    end)

    return {
        Window = Window,
        Show = function() 
            Window.Visible = true
            tweenShow:Play()
        end,
        Hide = function() 
            Window.Visible = false
            tweenHide:Play()
        end
    }
end

-- Example usage:

local lib = UI_Library
local MyWindow = lib:CreateWindow("Matex Hub") -- Create a new window with the title "Matex Hub"
